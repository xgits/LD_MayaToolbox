global proc selectUVEdgeBorder() {
    // Foundational code based on a MEL script by Jonathon Stewart
    // http://jonathonstewart.blogspot.com/2012/10/script-harden-edges-of-all-uv-borders.html
    // Code has been altered by Liu Dian to provide better functionality.

    int $mods = `getModifiers`;
    ConvertSelectionToEdges;
    string $edgeList[] = `ls -sl`;
    string $objList[] = `ls -sl -o`;
    InvertSelection;
    string $InvertedgeList[] = `ls -sl`;
    string $uvBorder[];
    string $edgeUVs[];
    string $allBorder[];
    string $secondEdgeList[];
    select $objList;
    ConvertSelectionToEdges;
    resetPolySelectConstraint;
    polySelectConstraint -m 3 -w 1 -t 0x8000;
    string $openEdges[] =`ls -sl`;
    resetPolySelectConstraint;
    if (`size $objList` == 0) { error "Nothing selected."; }

    SelectTool;

    for ($subObj in $objList) {
        select -r $subObj;
        polyNormalPerVertex -ufn true;
        catchQuiet ( `select -r $subObj.map["*"]` );

        polySelectBorderShell 1;

        $uvBorder = `polyListComponentConversion -te -in`;
        $uvBorder = `ls -fl $uvBorder`;

        clear( $allBorder );

        for( $curEdge in $uvBorder ) {
            $edgeUVs = `polyListComponentConversion -tuv $curEdge`;
            $edgeUVs = `ls -fl $edgeUVs`;
            if( size( $edgeUVs ) > 2 ) {
                $allBorder[ size( $allBorder ) ] = $curEdge;
                }
            }
    }
    select $allBorder;
    select -d $InvertedgeList;
    string $thisObj[] = `ls -sl -o`;
    if($mods==4) select -add $openEdges;
}